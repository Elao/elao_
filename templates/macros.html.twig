{% macro backgroundImageSrcset(path, preset, bgColor, options) -%}
    {%- set bgColor = bgColor ?? '#f1f1f1' -%}
    {%- set options = options ?? {} -%}
    {# Check for specific entry for the preset name: #}
    {%- set options = options[preset] ?? options -%}
    background: {{ bgColor }} url('{{ asset(path|glide_image_preset(preset, options)) }}');
    {% for prefix in ['webkit', 'moz', 'ms'] -%}
    background: {{ bgColor }} -{{ prefix }}-image-set(
        url('{{ asset(path|glide_image_preset(preset, options)) }}') 1x,
        url('{{ asset(path|glide_image_preset(preset, options|merge({ dpr: 2 }))) }}') 2x
    );
    {% endfor -%}
    background: {{ bgColor }} image-set(
        url('{{ asset(path|glide_image_preset(preset, options)) }}') 1x,
        url('{{ asset(path|glide_image_preset(preset, options|merge({ dpr: 2 }))) }}') 2x
    );
{%- endmacro %}

{% macro imageSrcset(path, preset) %}
    src="{{ asset(path|glide_image_preset(preset)) }}"
    srcset="
        {{ asset(path|glide_image_preset(preset)) }} 1x,
        {{ asset(path|glide_image_preset(preset, { dpr: 2 })) }} 2x
    "
{% endmacro %}

{% macro htmlAttributes(attributes) %}
    {%- for attrname, attrvalue in attributes -%}
        {{- " " -}}
        {%- if attrvalue is same as(true) -%}
            {{- attrname }}="{{ attrname }}"
            {%- elseif attrvalue is not same as(false) -%}
                {{- attrname }}="{{ attrvalue }}"
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}

{% macro breadcrumb(routes) %}
    <ol class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
    {% for route in routes %}
        <li class="breadcrumb__item" itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
            <a itemprop="item" href="{{ route.path }}">
                <span itemprop="name">{{ route.label }}</span>
            </a>
            <meta itemprop="position" content="{{ loop.index }}" />
        </li>
    {%- endfor -%}
    </ol>
{% endmacro %}
